/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forme;


import Kod.Main;
import KlaseTablica.Student;
import java.awt.Font;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Emanuel
 */
public class FormaKolegijOcjene extends javax.swing.JDialog {

    /**
     * Creates new form FormaImenikDjelatnici
     */
    
    
     int vrsta = 0;
     
   
     
      String jmbag;
      String prezime;
      String ime;
      String vrstaStudenta;
      
      String usmeni;
      String pismeni;
      String konacno;
      String polaganje;
  
     
     
     boolean uTijeku = true;
     boolean konacneOcjene = false;
     
     String odabraniKolegijID = Main.formaPrijava.glavnaforma.odabraniKolegijID;
         
         
    public FormaKolegijOcjene() {
        initComponents();
         this.setLocationRelativeTo(null);
         this.setModal(true);
        
         this.setTitle("Ocjene");
          if(jCheckBoxKonacneOcj.isSelected())
           konacneOcjene = true;
            else
            {
           konacneOcjene = false;
            }
          
          if(jCheckBoxUtijeku.isSelected())
           uTijeku = true;
            else
            {
            uTijeku = false;
            }
          
          napuniTablicu();
          
         
    }
    
    
    void ocistiTablicu()
    {
        DefaultTableModel model = (DefaultTableModel) tablica.getModel();
        model.setRowCount(0);   
    }
    
    
    void napuniTablicu()
    {
        
    
     if(uTijeku == true && konacneOcjene == false)
         {
             vrsta = 1;
         }
         else if(konacneOcjene == true && uTijeku == false)
         {
             vrsta = 2;
         }
         else if(konacneOcjene == true && uTijeku == true)
         {
             vrsta = 3;
         }
         else if(konacneOcjene == false && uTijeku == false)
         {
             vrsta = 4;
         }
      
        
         
      
        ArrayList <Student> studenti = Main.db.dohvatiKolegijOcjene(vrsta,odabraniKolegijID);
        
        
        
        DefaultTableModel model = (DefaultTableModel) this.tablica.getModel();
        
        Object [] row = new Object [10];
        
        if(vrsta != 4)
        {
              for(int i=0;i<studenti.size();i++)
        {
            row[0]=i+1;
            row[1]=studenti.get(i).getJmbag();
            row[2]=studenti.get(i).getPrezime();
            row[3]=studenti.get(i).getIme();
            String vrstaString = studenti.get(i).getVrsta() == 'R' ? "REDOVNI" : "IZVANREDNI";
            row[4]=vrstaString;
            Integer usmeni = studenti.get(i).getOcjena().getUsmeni() == 0 ? null : studenti.get(i).getOcjena().getUsmeni();
            row[5]=usmeni;
            Integer pismeni = studenti.get(i).getOcjena().getPismeni() == 0 ? null : studenti.get(i).getOcjena().getPismeni();
            row[6]=pismeni;
            Integer konacna = studenti.get(i).getOcjena().getKonacna()== 0 ? null : studenti.get(i).getOcjena().getKonacna();
            row[7]=konacna;
            row[8]=studenti.get(i).getOcjena().getPolaganje();
            row[9]=studenti.get(i).getOcjena().getUnos();
            model.addRow(row);
        }
      
        }
       
        
      
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tablica = new javax.swing.JTable();
        jCheckBoxUtijeku = new javax.swing.JCheckBox();
        jCheckBoxKonacneOcj = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jScrollPane2.setPreferredSize(new java.awt.Dimension(600, 900));

        tablica.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tablica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "R.br.", "Jmbag", "Prezime", "Ime", "Vrsta", "Usmeni", "Pismeni", "Konačno", "Položeno", "Upisano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablica.setGridColor(new java.awt.Color(0, 0, 0));
        tablica.setRowHeight(22);
        tablica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablicaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablicaMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablica);

        jCheckBoxUtijeku.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jCheckBoxUtijeku.setForeground(new java.awt.Color(141, 0, 51));
        jCheckBoxUtijeku.setSelected(true);
        jCheckBoxUtijeku.setText("Ocjene u tijeku");
        jCheckBoxUtijeku.setActionCommand("");
        jCheckBoxUtijeku.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxUtijekuItemStateChanged(evt);
            }
        });
        jCheckBoxUtijeku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxUtijekuActionPerformed(evt);
            }
        });

        jCheckBoxKonacneOcj.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jCheckBoxKonacneOcj.setForeground(new java.awt.Color(141, 0, 51));
        jCheckBoxKonacneOcj.setText("Konačne ocjene");
        jCheckBoxKonacneOcj.setActionCommand("");
        jCheckBoxKonacneOcj.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxKonacneOcjItemStateChanged(evt);
            }
        });
        jCheckBoxKonacneOcj.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxKonacneOcjStateChanged(evt);
            }
        });
        jCheckBoxKonacneOcj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxKonacneOcjActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(141, 0, 51));
        jButton1.setText("UNOS OCJENA");
        jButton1.setEnabled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(111, 33));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jCheckBoxUtijeku)
                        .addGap(27, 27, 27)
                        .addComponent(jCheckBoxKonacneOcj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxUtijeku, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxKonacneOcj, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxUtijekuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxUtijekuItemStateChanged
        if(jCheckBoxUtijeku.isSelected())
        {
             uTijeku = true;
             System.out.println("Opcija odabrana: U tijeku");
        }
        else
        {
            uTijeku = false;
             System.out.println("Opcija poništena: U tijeku");
        }
        
        ocistiTablicu();
        napuniTablicu();
       
       

       
    }//GEN-LAST:event_jCheckBoxUtijekuItemStateChanged

    private void jCheckBoxUtijekuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxUtijekuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxUtijekuActionPerformed

    private void jCheckBoxKonacneOcjItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxKonacneOcjItemStateChanged
        if(jCheckBoxKonacneOcj.isSelected())
        {
            konacneOcjene = true;
            System.out.println("Opcija odabrana: Konačne ocjene");
        }
       else
        {
            konacneOcjene = false;
            System.out.println("Opcija poništena: Konačne ocjene");
        }
        
        ocistiTablicu();
        napuniTablicu();
        
    }//GEN-LAST:event_jCheckBoxKonacneOcjItemStateChanged

    private void jCheckBoxKonacneOcjStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxKonacneOcjStateChanged

    }//GEN-LAST:event_jCheckBoxKonacneOcjStateChanged

    private void jCheckBoxKonacneOcjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxKonacneOcjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxKonacneOcjActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      FormaUnosOcjene forma = new FormaUnosOcjene();
      forma.getjLabelJMBAG().setText(jmbag);
      forma.getjLabelPrezime().setText(prezime);
      forma.getjLabelIme().setText(ime);
      forma.getjTextFieldUsmeni().setText(usmeni);
      forma.getjTextFieldPismeni().setText(pismeni);
      forma.getjTextFieldKonacna().setText(konacno);
      forma.konacno = konacno;
      forma.pismeni = pismeni;
      forma.usmeni = usmeni;
      forma.getVrsta().setText(vrstaStudenta);
 
      

      Date datePolaganje = new Date(); 
      
    
    DateFormat format = new SimpleDateFormat("dd.MM.yyyy", Locale.ENGLISH);
    format.setLenient(false);
    
  
    
    if(polaganje != null  && !polaganje.isBlank())
    {
        
         try {
             datePolaganje = format.parse(polaganje);
          
         } catch (ParseException ex) {
             Logger.getLogger(FormaKolegijOcjene.class.getName()).log(Level.SEVERE, null, ex);
         }
    
   
      forma.getjDateChooser1().setDate(datePolaganje);
    }
   
     
          
      forma.setVisible(true);
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablicaMouseClicked
      int i = tablica.getSelectedRow();
      TableModel model = tablica.getModel();
      
      
      if(model.getValueAt(i,1) == null)  
      {
          jmbag = null;
      }
      else
      {
          jmbag =  model.getValueAt(i,1).toString();
      }
      
       if(model.getValueAt(i,2) == null)  
      {
          prezime = null;
      }
        else
      {
         prezime  =  model.getValueAt(i,2).toString();
      }
       
         if(model.getValueAt(i,3) == null)  
      {
          ime = null;
      }
        else
      {
        ime  =  model.getValueAt(i,3).toString();
      }
         if(model.getValueAt(i,4) == null)  
      {
         vrstaStudenta = null;
      }
        else
      {
        vrstaStudenta  =  model.getValueAt(i,4).toString();
      }
         
      
      if(model.getValueAt(i,5) == null)  
      {
         usmeni= null;
      }
        else
      {
       usmeni  =  model.getValueAt(i,5).toString();
      }
      
      if(model.getValueAt(i,6) == null)  
      {
         pismeni= null;
      }
        else
      {
       pismeni  =  model.getValueAt(i,6).toString();
      }
      
         if(model.getValueAt(i,7) == null)  
      {
         konacno= null;
      }
        else
      {
       konacno=  model.getValueAt(i,7).toString();
      }
         
         if(model.getValueAt(i,8) == null)  
      {
         polaganje= null;
      }
        else
      {
       polaganje=  model.getValueAt(i,8).toString();
      }
     
      jButton1.setText(prezime + "   "+ ime);
      jButton1.setFont(new Font("Segoe UI", Font.BOLD, 16));
      jButton1.setEnabled(true);
      
      
     
    }//GEN-LAST:event_tablicaMouseClicked

    private void tablicaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablicaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablicaMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaKolegijOcjene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaKolegijOcjene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaKolegijOcjene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaKolegijOcjene.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
             
               
                
      
            }
        });
    }

    public JScrollPane getjScrollPane2() {
        return jScrollPane2;
    }

    public void setjScrollPane2(JScrollPane jScrollPane2) {
        this.jScrollPane2 = jScrollPane2;
    }

    public JTable getTablica() {
        return tablica;
    }

    public void setTablica(JTable tablica) {
        this.tablica = tablica;
    }



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBoxKonacneOcj;
    private javax.swing.JCheckBox jCheckBoxUtijeku;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablica;
    // End of variables declaration//GEN-END:variables
}
